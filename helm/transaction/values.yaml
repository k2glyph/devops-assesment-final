replicaCount: 5
image:
  repository: medineshkatwal/transactionapi
  pullPolicy: Always
  tag: "v2"
imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""
envFrom:
  - secretRef:
      name: transaction-secret
serviceAccount:
  create: true
  automount: true
  annotations: {}
  # If not set and create is true, a name is generated using the fullname template
  name: ""
podAnnotations: {}
podLabels: {}
podSecurityContext: {}
# fsGroup: 2000

securityContext: {}
# capabilities:
#   drop:
#   - ALL
# readOnlyRootFilesystem: true
# runAsNonRoot: true
# runAsUser: 1000

service:
  type: ClusterIP
  port: 8080
ingress:
  enabled: false
resources: {}
livenessProbe:
  httpGet:
    path: /health
    port: http
readinessProbe:
  httpGet:
    path: /health
    port: http
autoscaling:
  enabled: true
  minReplicas: 5
  maxReplicas: 10
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80
# Additional volumes on the output Deployment definition.
volumes: []
# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
nodeSelector:
  role: api

tolerations: []
affinity:
  podAntiAffinity:
    requiredDuringSchedulingIgnoredDuringExecution:
      - labelSelector:
          matchExpressions:
            - key: app.kubernetes.io/name
              operator: In
              values:
                - transaction
        topologyKey: "kubernetes.io/hostname"  # Ensures pods are spread across different nodes

postgresql:
  enabled: true
  auth:
    username: transaction
    database: transactionapi_db
    existingSecret: postgresql-secret
  image:
    tag: 12